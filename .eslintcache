[{"G:\\react\\chat-master\\src\\index.js":"1","G:\\react\\chat-master\\src\\redux\\store.js":"2","G:\\react\\chat-master\\src\\App.jsx":"3","G:\\react\\chat-master\\src\\firebase.js":"4","G:\\react\\chat-master\\src\\components\\loader\\Loader.jsx":"5","G:\\react\\chat-master\\src\\components\\Chat\\Chat.jsx":"6","G:\\react\\chat-master\\src\\components\\Header\\Header.jsx":"7","G:\\react\\chat-master\\src\\components\\Messages\\Messages.jsx":"8","G:\\react\\chat-master\\src\\components\\Footer\\Footer.jsx":"9","G:\\react\\chat-master\\src\\components\\Message\\Message.jsx":"10","G:\\react\\chat-master\\src\\assets\\styled\\components.js":"11","G:\\react\\chat-master\\src\\validation\\validation.js":"12","G:\\react\\chat-master\\src\\components\\Modal\\Modal.jsx":"13","G:\\react\\chat-master\\src\\components\\Auth\\Auth.jsx":"14","G:\\react\\chat-master\\src\\components\\Register\\Register.jsx":"15"},{"size":374,"mtime":1618325973515,"results":"16","hashOfConfig":"17"},{"size":909,"mtime":1618065709861,"results":"18","hashOfConfig":"17"},{"size":548,"mtime":1618325893728,"results":"19","hashOfConfig":"17"},{"size":639,"mtime":1618091190338,"results":"20","hashOfConfig":"17"},{"size":343,"mtime":1615117729000,"results":"21","hashOfConfig":"17"},{"size":1293,"mtime":1618087316772,"results":"22","hashOfConfig":"17"},{"size":245,"mtime":1618001612426,"results":"23","hashOfConfig":"17"},{"size":1791,"mtime":1618091380453,"results":"24","hashOfConfig":"17"},{"size":1369,"mtime":1618092219538,"results":"25","hashOfConfig":"17"},{"size":883,"mtime":1618324338281,"results":"26","hashOfConfig":"17"},{"size":1012,"mtime":1618064436893,"results":"27","hashOfConfig":"17"},{"size":902,"mtime":1618326223173,"results":"28","hashOfConfig":"17"},{"size":501,"mtime":1618068531800,"results":"29","hashOfConfig":"17"},{"size":2538,"mtime":1618325819145,"results":"30","hashOfConfig":"17"},{"size":3222,"mtime":1618326518930,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iaiqic",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\react\\chat-master\\src\\index.js",[],"G:\\react\\chat-master\\src\\redux\\store.js",[],"G:\\react\\chat-master\\src\\App.jsx",[],"G:\\react\\chat-master\\src\\firebase.js",[],"G:\\react\\chat-master\\src\\components\\loader\\Loader.jsx",[],"G:\\react\\chat-master\\src\\components\\Chat\\Chat.jsx",["65"],"import React, {useEffect, useState} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport 'firebase/auth';\nimport { connect } from \"react-redux\";\nimport { updateCurrentUser } from \"../../redux/store\";\nimport Header from \"../Header/Header\";\nimport Messages from \"../Messages/Messages\";\nimport Footer from \"../Footer/Footer\";\nimport s from \"./Chat.module.css\";\n\nconst Chat = (props) => {\n    const [userEmail, setUserEmail] = useState(\"\")\n    const [isRedirect, setIsRedirect] = useState(false)\n    useEffect( () => {\n        firebase.auth().onAuthStateChanged( (user) => {\n            (user && user.emailVerified) ? setIsRedirect(false) : setIsRedirect(true)\n            props.updateCurrentUser(user.uid)\n            setUserEmail(user.email);\n          });\n    }, [] )\n    let logOut = () => {\n      firebase.auth().signOut();\n    }\n    if(isRedirect) return <Redirect to=\"/auth\"/>\n    return(\n        <div className={s.chat}>\n            <Header logOut={logOut}/>\n            <Messages />\n            <Footer uid = {props.id} userEmail = {userEmail}/>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n            id: state.currentUser.uid\n        }\n}\nexport default connect(mapStateToProps, { updateCurrentUser }) (Chat);","G:\\react\\chat-master\\src\\components\\Header\\Header.jsx",[],"G:\\react\\chat-master\\src\\components\\Messages\\Messages.jsx",["66"],"import React, {useEffect, useRef, useState} from \"react\";\nimport firebase from \"../../firebase\";\nimport {connect} from \"react-redux\";\nimport {updateMessages} from \"../../redux/store\";\nimport s from \"./Messages.module.css\";\nimport Message from \"../Message/Message\";\nimport Loader from \"../loader/Loader\";\nconst Messages = (props) => {\n    const [isLoader, setIsLoader] = useState(true);\n    useEffect( () => {\n\n      // получаю смс\n      const unsubscribe = firebase.firestore().collection(\"messages\").orderBy(\"date\", \"asc\").limitToLast(15).onSnapshot(\n        function(snapshot) {\n          let messages = [];\n          snapshot.forEach( doc => messages.push({ userId: doc.data().userId, message: doc.data().message, userEmail: doc.data().userEmail, mesId: doc.data().date.seconds}) )\n          props.updateMessages( messages );\n          setIsLoader(false);\n      });\n      return () => {\n        unsubscribe();\n      }\n      \n    }, [])\n\n    let messagesDiv = useRef(null);\n    if (messagesDiv.current) {\n      setTimeout(() => {\n        messagesDiv.current.scrollTop = messagesDiv.current.scrollHeight;\n      }, 1);\n    }\n    // ЕСЛИ ВИДИШЬ ЭТО - НАПИШИ, ЧТО НАШЕЛ ПАСХАЛКУ\n    return(\n       <div className={s.messages} ref={messagesDiv}>\n           {isLoader \n           ? <Loader /> \n           : \n           props.messages.map( (m) => \n           <Message \n           key={m.mesId} \n           userId={m.userId} \n           message = {m.message}\n           currentUserId= {props.id} \n           userEmail = {m.userEmail}/> )}\n       </div>\n    )\n}\nlet mapStateToProps = (state) => {\n    return{\n      messages: state.messages,\n      id: state.currentUser.uid,\n    }\n}\n\nexport default connect(mapStateToProps, {updateMessages})(Messages);\n\n","G:\\react\\chat-master\\src\\components\\Footer\\Footer.jsx",[],"G:\\react\\chat-master\\src\\components\\Message\\Message.jsx",[],"G:\\react\\chat-master\\src\\assets\\styled\\components.js",[],"G:\\react\\chat-master\\src\\validation\\validation.js",[],"G:\\react\\chat-master\\src\\components\\Modal\\Modal.jsx",[],["67","68"],"G:\\react\\chat-master\\src\\components\\Auth\\Auth.jsx",[],"G:\\react\\chat-master\\src\\components\\Register\\Register.jsx",[],{"ruleId":"69","severity":1,"message":"70","line":21,"column":8,"nodeType":"71","endLine":21,"endColumn":10,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"70","line":24,"column":8,"nodeType":"71","endLine":24,"endColumn":10,"suggestions":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["78"],["79"],"no-native-reassign",["80"],"no-negated-in-lhs",["81"],{"desc":"82","fix":"83"},{"desc":"82","fix":"84"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props]",{"range":"85","text":"86"},{"range":"87","text":"86"},[812,814],"[props]",[935,937]]